doctype html
html(lang='en')
  head
    // Global site tag (gtag.js) - Google Analytics
    script(async='', src='https://www.googletagmanager.com/gtag/js?id=UA-144190992-1')
    script.
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-144190992-1');
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    meta(http-equiv='x-ua-compatible', content='ie=edge')
    title Renal Dose
    link(rel='stylesheet', href='https://use.fontawesome.com/releases/v5.6.3/css/all.css')
    link(href='../css/bootstrap.min.css', rel='stylesheet')
    link(href='../css/mdb.min.css', rel='stylesheet')
    link(href='../css/style.css', rel='stylesheet')
    link(href='../css/addons/datatables.min.css', rel='stylesheet')
    link(rel='shortcut icon', href='../img/favicons/favicon.ico')
    link(rel='apple-touch-icon', sizes='57x57', href='../img/favicons/apple-icon-57x57.png')
    link(rel='apple-touch-icon', sizes='60x60', href='../img/favicons/apple-icon-60x60.png')
    link(rel='apple-touch-icon', sizes='72x72', href='../img/favicons/apple-icon-72x72.png')
    link(rel='apple-touch-icon', sizes='76x76', href='../img/favicons/apple-icon-76x76.png')
    link(rel='apple-touch-icon', sizes='114x114', href='../img/favicons/apple-icon-114x114.png')
    link(rel='apple-touch-icon', sizes='120x120', href='../img/favicons/apple-icon-120x120.png')
    link(rel='apple-touch-icon', sizes='144x144', href='../img/favicons/apple-icon-144x144.png')
    link(rel='apple-touch-icon', sizes='152x152', href='../img/favicons/apple-icon-152x152.png')
    link(rel='apple-touch-icon', sizes='180x180', href='../img/favicons/apple-icon-180x180.png')
    link(rel='icon', type='image/png', sizes='192x192', href='../img/favicons/android-icon-192x192.png')
    link(rel='icon', type='image/png', sizes='32x32', href='../img/favicons/favicon-32x32.png')
    link(rel='icon', type='image/png', sizes='96x96', href='../img/favicons/favicon-96x96.png')
    link(rel='icon', type='image/png', sizes='16x16', href='../img/favicons/favicon-16x16.png')
    link(rel='manifest', href='../img/favicons/manifest.json')
    meta(name='msapplication-TileColor', content='#ffffff')
    meta(name='msapplication-TileImage', content='../img/favicons/ms-icon-144x144.png')
    meta(name='theme-color', content='#ffffff')
    meta(name='msapplication-config', content='../img/favicons/browserconfig.xml')
    // JQuery
    script(type='text/javascript', src='../js/jquery-3.3.1.min.js')
    // Bootstrap tooltips
    script(type='text/javascript', src='../js/popper.min.js')
    // Bootstrap core JavaScript
    script(type='text/javascript', src='../js/bootstrap.min.js')
    // MDB core JavaScript
    script(type='text/javascript', src='../js/mdb.js')
    // Scroll Stuff
    script.
      let isMobile = /iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile|webOS|Windows Phone/i.test(navigator.userAgent);
      if (isMobile) {
      $(document).ready(function(){
      // Add smooth scrolling to all links
      $("a").on('click', function(event) {
      // Make sure this.hash has a value before overriding default behavior
      if (this.hash !== "") {
      // Prevent default anchor click behavior
      event.preventDefault();
      // Store hash
      var hash = this.hash;
      // Using jQuery's animate() method to add smooth page scroll
      // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area
      $('html, body').animate({
      scrollTop: $(hash).offset().top
      }, 800, function(){
      // Add hash (#) to URL when done scrolling (default click behavior)
      window.location.hash = hash;
      });
      } // End if
      });
      });
      } else {
      $(document).ready(function(){
      // Add smooth scrolling to all links
      $("a").on('click', function(event) {
      // Make sure this.hash has a value before overriding default behavior
      if (this.hash !== "") {
      // Prevent default anchor click behavior
      event.preventDefault();
      // Store hash
      var hash = this.hash;
      // Using jQuery's animate() method to add smooth page scroll
      // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area
      $('html, body').animate({
      scrollTop: $(hash).offset().top
      }, 50, function(){
      // Add hash (#) to URL when done scrolling (default click behavior)
      window.location.hash = hash;
      });
      } // End if
      });
      });
      }
  body
    header
      nav.navbar.navbar-expand-lg.navbar-dark.default-color.fixed-top.scrolling-navbar
        .container
          a.navbar-brand(href='/en')
            strong RD
          button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarSupportedContent-7', aria-controls='navbarSupportedContent-7', aria-expanded='false', aria-label='Toggle navigation')
            span.navbar-toggler-icon
          #navbarSupportedContent-7.collapse.navbar-collapse
            ul.navbar-nav.mr-auto
              li.nav-item
                a.nav-link(href='/en')
                  | Home
                  span.sr-only (current)
              li.nav-item.active
                a.nav-link(href='calculator') Calculator
              li.nav-item
                a.nav-link(href='data_table') Data Table
              li.nav-item
                a.nav-link(href='about') About
      .view(style="background-image: url('../img/calculate_01.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;")
        .mask.rgba-black-light.align-items-center.flex-center
          .container
            .row
              .col-md-12.mb-4.white-text.text-center
                h1.h1-reponsive.white-text.mb-0.pt-md-5.pt-5.wow.flipInX.slow
                  strong Interactive Dose Calculator
                hr.hr-light.my-4.w-75.wow.fadeInDown.slow
                h5.mb-4.white-text.wow.fadeInDown.slow
                  strong
                    | In the case of having specific clinical data of the patient, we can start dose calculation for the active substance you choose
                a.btn.btn-outline-white.wow.pulse.smooth-scroll(data-wow-delay='2s', href='#activeSubstance') I'm ready, let's go
    #activeSubstance.view(data-spy='activeSubstance', data-target='#activeSubstance', style="background-image: url('../img/calculate_02.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;")
      .mask.rgba-stylish-light.align-items-center.flex-center(style="overflow-y: scroll")
        .container
          .row.mt-3.text-center
            .col-12.col-lg-6.mt-3
              .dropdown
                button#dropdownMenu1-1.btn.btn-primary.dropdown-toggle.rounded-pill(style='width: 100%;', type='button', data-toggle='dropdown') Select The Active Substance
                #searchDrop.dropdown-menu.dropdown-primary(style="width: 95%")
                  input#searchField.form-control.ml-2(style="width: 95%; color: midnightblue;" onkeyup='searchTest()', type='text', placeholder='Search', aria-label='Search')
                  h6.dropdown-header(style="margin-top: 5px; font-weight: bold; color: seagreen;") Antibacterial
                  a.dropdown-item
                    | Daptomycin - 
                    small Cubicin
                  a.dropdown-item
                    | Ertapenem sodium - 
                    small Invanz
                  a.dropdown-item
                    | Imipenem / Cilastatin sodium - 
                    small Primaxin
                  a.dropdown-item
                    | Colistimethate sodium - 
                    small Coly Mycin M
                  a.dropdown-item
                    | Levofloxacin - 
                    small Levaquin
                  a.dropdown-item
                    | Linezolid - 
                    small Zyvox
                  a.dropdown-item
                    | Meropenem trihydrate - 
                    small Merrem IV
                  a.dropdown-item
                    | Metronidazole - 
                    small Flagyl
                  a.dropdown-item
                    | Moxifloxacin hydrochloride - 
                    small Avelox
                  a.dropdown-item
                    | Piperacillin sodium / Tazobactam sodium - 
                    small Zosyn
                  a.dropdown-item
                    | Cefoperazone sodium / Sulbactam sodium - 
                    small Magnex Forte
                  a.dropdown-item
                    | Ciprofloxacin lactate - 
                    small Cipro
                  a.dropdown-item
                    | Teicoplanin - 
                    small Targocid
                  a.dropdown-item
                    | Tigecycline - 
                    small Tygacil
                  a.dropdown-item
                    | Vancomycin hydrochloride - 
                    small Vancocin
                  .dropdown-divider
                  h6.dropdown-header(style="margin-top: 5px; font-weight: bold; color: seagreen;") Antifungal
                  a.dropdown-item
                    | Fluconazole - 
                    small Diflucan
            .col-12.col-lg-6.mt-3
              .dropdown
                button#dropdownMenu1-2.btn.btn-primary.dropdown-toggle.rounded-pill(style='width: 100%;', type='button', data-toggle='dropdown') Cockcroft-Gault Equation
                #searchDrop2.dropdown-menu.dropdown-primary(style="width: 95%")
                  a#willDisable.dropdown-item Cockcroft-Gault Equation
                  a#willDisable2.dropdown-item e-GFR Method
          .row.mt-3
            #notNeeded.col(style='display:none')
              p#nonDiyaText.note.note-info.wow.fadeIn For this active substance, dose adjustment is not needed in the case of renal insufficiency.
          #cockgaulty.row.text-center.align-items-center
            .col-6.col-lg-2
              select#gender1.browser-default.custom-select(autocomplete='off')
                option(selected='') Gender
                option(value='1') Male
                option(value='2') Female
            .col-6.col-lg-2.md-form.input-group.mb-3
              input#age1.form-control(type='number', placeholder='Age', aria-label='Age', aria-describedby='material-addon1', step='1', autocomplete='off', min='0')
            .col-6.col-lg-2.md-form.input-group.mb-3
              input#srcr1.form-control(type='number', placeholder='Serum creatinine', aria-label='Serum creatinine', aria-describedby='material-addon1', step='0.01', autocomplete='off', min='0')
            .col-6.col-lg-2
              select#crunit1.browser-default.custom-select
                option(selected='', value='1') mg/dL
                option(value='2') ‎µmol/L
            .col-6.col-lg-2.md-form.input-group.mb-3
              input#weight.form-control(type='number', placeholder='Weight', aria-label='Weight', aria-describedby='material-addon1', step='0.5', autocomplete='off', min='0')
            #diya1.col-6.col-lg-2.custom-control.custom-checkbox.mt-3(style='padding-left: 2.5rem;')
              input#diyaliz1.custom-control-input(type='checkbox', autocomplete='off')
              label#dia1.custom-control-label(for='diyaliz1') Receiving Hemodialysis
          #egfry.row.text-center.align-items-center(style='display:none')
            .col-6.col-lg-3
              select#gender2.browser-default.custom-select(autocomplete='off')
                option(selected='') Gender
                option(value='1') Male
                option(value='2') Female
            .col-6.col-lg-3.md-form.input-group.mb-3
              input#age2.form-control(type='number', placeholder='Age', aria-label='Age', aria-describedby='material-addon1', step='1', autocomplete='off', min='0')
            .col-6.col-lg-3.md-form.input-group.mb-3
              input#srcr2.form-control(type='number', placeholder='Serum creatinine', aria-label='Serum creatinine', aria-describedby='material-addon1', step='0.01', autocomplete='off', min='0')
            .col-6.col-lg-3
              select#crunit2.browser-default.custom-select
                option(selected='', value='1') mg/dL
                option(value='2') ‎µmol/L
            .col-6.col-lg-3.md-form.input-group.mb-3
              input#nitrog.form-control(type='number', placeholder='BUN', aria-label='BUN', aria-describedby='material-addon1', step='0.01', autocomplete='off', min='0')
            .col-6.col-lg-3.md-form.input-group.mb-3
              input#albumin.form-control(type='number', placeholder='Albumin', aria-label='Albumin', aria-describedby='material-addon1', step='0.01', autocomplete='off', min='0')
            #bla.col-6.col-lg-3.custom-control.custom-checkbox.mt-2
              input#black.custom-control-input(type='checkbox', autocomplete='off')
              label.custom-control-label(for='black') Black
            #diya2.col-6.col-lg-3.custom-control.custom-checkbox.mt-2
              input#diyaliz2.custom-control-input(type='checkbox', autocomplete='off')
              label#dia2.custom-control-label(for='diyaliz2') Receiving Hemodialysis
          .row.mt-3
            #infoDiv.col
              p#infoText.note.note-info.wow.fadeIn
                | When using 
                strong Cockcroft-Gault equation
                |, you should provide gender, age, weight and serum creatinine values.
          .row.text-center.align-items-center.mt-4
            #calculate.col.mb-3
              button#calcButton.btn.btn-cyan.rounded-pill.rounded-pill.btn-lg.disabled(type='button') Calculate
    #imipenem-cilastatin.view(data-spy='imipenem-cilastatin', data-target='#imipenem-cilastatin', style="display: none; background-image: url('../img/imi-cila.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;")
      .mask.rgba-stylish-light.flex-center.text-center.align-items-center
        .container
          .row
            .col
              p#leftNote1.note.note-info.wow.fadeIn
                strong
                  | Calculation for this active substance may be performed based on the dose which 
                  u physician determined for the indication.
          .row.mt-3
            .col-12.col-lg-3.mt-3
              label(for='diyaForCila', style='color: white; font-weight: bold') Receiving Hemodialysis
              select#diyaForCila.browser-default.custom-select
                option(value='1') Yes
                option(selected='', value='2') No
            .col-12.col-lg-3.mt-3
              label(for='normalForCila', style='color: white; font-weight: bold') Determined Daily Dose
              select#normalForCila.browser-default.custom-select
                option(value='1') 1.0 g / day
                option(value='2') 1.5 g / day
                option(selected='', value='3') 2.0 g / day
                option(value='4') 3.0 g / day
                option(value='5') 4.0 g / day
            .col-12.col-lg-3.mt-3
              label(for='srcrForCila', style='color: white; font-weight: bold') Creatinin Clearence (ml/min)
              input#srcrForCila.form-control(type='number', style='color: black', step='0.01', autocomplete='off', min='0', readonly='')
            .col-12.col-lg-3.mt-3
              label(for='weightForCila', style='color: white; font-weight: bold') Weight (Kilogram)
              input#weightForCila.form-control(type='text', style='color: black', autocomplete='off')
          .row.text-center.align-items-center.mt-4
            #calculateForCila.col
              button#calcForCila.btn.btn-cyan.rounded-pill.rounded-pill.btn-lg(type='button') Calculate
    #daptomicina.view(data-spy='daptomicina', data-target='#daptomicina', style="display: none; background-image: url('../img/imi-cila.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;")
      .mask.rgba-stylish-light.flex-center.text-center.align-items-center
        .container
          .row
            .col
              p#leftNote.note.note-info.wow.fadeIn
                strong
                  | Calculation for this active substance will differ depending on the indication. Please provide the necessary information for the patient.
              strong
            strong
          strong
            .row.mt-3
              .col-12.col-lg-3.mt-3
                label(for='diyaForDapto', style='color: white; font-weight: bold') Receiving Hemodialysis
                select#diyaForDapto.browser-default.custom-select
                  option(value='1') Yes
                  option(selected='', value='2') No
              .col-12.col-lg-3.mt-3
                label(for='indicForDapto', style='color: white; font-weight: bold') Therapeutic Indication
                select#indicForDapto.browser-default.custom-select
                  option(value='1') Skin and Soft Tissue Infections
                  option(selected='', value='2') Bacteremias Caused by S.Aureus
              .col-12.col-lg-3.mt-3
                label(for='srcrForDapto', style='color: white; font-weight: bold') Creatinin Clearence (ml/min)
                input#srcrForDapto.form-control(type='number', style='color: black', step='0.01', autocomplete='off', min='0', readonly='')
              .col-12.col-lg-3.mt-3
                label(for='weightForDapto', style='color: white; font-weight: bold') Weight (Kilogram)
                input#weightForDapto.form-control(type='text', style='color: black', autocomplete='off')
            .row.text-center.align-items-center.mt-4
              .col
                button#calculateForDapto.btn.btn-cyan.rounded-pill.btn-lg(type='button') Calculate
        strong
      strong
    strong
      #levofloxacin.view(data-spy='levofloxacin', data-target='#levofloxacin', style="display: none; background-image: url('../img/imi-cila.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;")
        .mask.rgba-stylish-light.flex-center.text-center.align-items-center
          .container
            .row
              .col
                p#leftNote1.note.note-info.wow.fadeIn
                  strong
                    | Calculation for this active substance may be performed based on the dose which 
                    u physician determined for the indication.
            .row.mt-3
              .col-12.col-lg-4.mt-3
                label(for='normalForLevo', style='color: white; font-weight: bold') Determined Daily Dose
                select#normalForLevo.browser-default.custom-select
                  option(value='1') 250 mg / 24 hours
                  option(value='2') 500 mg / 24 hours
                  option(selected='', value='3') 500 mg / 12 hours
              .col-12.col-lg-4.mt-3
                label(for='diyaForLevo', style='color: white; font-weight: bold') Receiving Hemodialysis
                select#diyaForLevo.browser-default.custom-select
                  option(value='1') Yes
                  option(selected='', value='2') No
              .col-12.col-lg-4.mt-3
                label(for='srcrForLevo', style='color: white; font-weight: bold') Creatinin Clearence (ml/min)
                input#srcrForLevo.form-control(type='number', style='color: black', step='0.01', autocomplete='off', min='0')
            .row.text-center.align-items-center.mt-4
              .col
                button#calculateForLevo.btn.btn-cyan.rounded-pill.btn-lg(type='button') Calculate
      #presentResults.view(data-spy='presentResults', data-target='#presentResults', style="background-image: url('../img/calculate_03.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;")
        .mask.rgba-stylish-light.flex-center.align-items-center.text-center(style="overflow-y: scroll")
          .container
            .row
              .col
                h2#resultText(style='color: white; font-weight: bold; letter-spacing: 2px; line-height: 55px; font-size: 3.5vh;')
                  | Initiation of the calculation process is being waited. Let's skip to the 
                  a(href='#activeSubstance') data input
                  |  section
            .row.justify-content-md-center
              .col-12.col-lg-3
                button#reload.btn.btn-cyan.rounded-pill.mt-3(style='padding: 1rem 2rem; display: none;')
                  | New Calculation 
                  i.fas.fa-redo.pl-1
              .col-12.col-lg-3
                button#print.btn.btn-cyan.rounded-pill.mt-3(style='padding: 1rem 2rem; display: none;', onclick="window.open('print','_blank');")
                  | Save / Print 
                  i.far.fa-file-alt.pl-1
  script.
    // Animations init
    new WOW().init();
    $('.toast').toast('show');
  script.
    function searchTest() {
    var input, filter, ul, li, a, i;
    input = document.getElementById("searchField");
    filter = input.value.toUpperCase();
    div = document.getElementById("searchDrop");
    a = div.getElementsByTagName("a");
    for (i = 0; i < a.length; i++) {
    txtValue = a[i].textContent || a[i].innerText;
    if (txtValue.toUpperCase().indexOf(filter) > -1) {
    a[i].style.display = "";
    } else {
    a[i].style.display = "none";
    }
    }
    }
  script.
    let infoDiv = document.getElementById("infoDiv");
    let infoText = document.getElementById("infoText");
    let calculatey = document.getElementById("calculate");
    $( "#searchDrop > a" ).click(function() {
    let string = $(this).text();
    let index = string.indexOf('-');
    let textResult = string.substring(0, (index-1));
    $('#dropdownMenu1-1').text(textResult);
    infoText.innerHTML = "When using <strong>Cockcroft-Gault equation</strong>, you should provide gender, age, weight and serum creatinine values.";
    let needy = document.getElementById("notNeeded");
    let egfry = document.getElementById("egfry");
    let cockgaulty = document.getElementById("cockgaulty");
    let neighbour = $('#dropdownMenu1-2');
    let disably = document.getElementById("willDisable");
    let disably2 = document.getElementById("willDisable2");
    let buttony = document.getElementById("calcButton");
    let diya1 = document.getElementById("diya1");
    let diya2 = document.getElementById("diya2");
    let notNeedy = document.getElementById("nonDiyaText");
    if (textResult === "Tigecycline") {
    notNeedy.innerHTML = "For this active substance, dose adjustment isn't needed in the case of renal insufficiency.";
    needy.style.display = "block";
    egfry.style.display = "none";
    cockgaulty.style.display = "none";
    disably.className = "dropdown-item2 disabled";
    disably2.className = "dropdown-item2 disabled";
    calculatey.style.display = "none";
    infoDiv.style.display = "none";
    } else if (textResult === "Moxifloxacin hydrochloride") {
    notNeedy.innerHTML = "For this active substance, dose adjustment isn't needed in the case of renal insufficiency.";
    needy.style.display = "block";
    egfry.style.display = "none";
    cockgaulty.style.display = "none";
    disably.className = "dropdown-item2 disabled";
    disably2.className = "dropdown-item2 disabled";
    calculatey.style.display = "none";
    infoDiv.style.display = "none";
    } else if (textResult === "Linezolid") {
    notNeedy.innerHTML = "For this active substance, dose adjustment isn't needed in the case of renal insufficiency.";
    needy.style.display = "block";
    egfry.style.display = "none";
    cockgaulty.style.display = "none";
    disably.className = "dropdown-item2 disabled";
    disably2.className = "dropdown-item2 disabled";
    calculatey.style.display = "none";
    infoDiv.style.display = "none";
    } else if (textResult === "Metronidazole") {
    notNeedy.innerHTML = "For this active substance, dose adjustment isn't needed in the case of renal insufficiency.";
    needy.style.display = "block";
    egfry.style.display = "none";
    cockgaulty.style.display = "none";
    disably.className = "dropdown-item2 disabled";
    disably2.className = "dropdown-item2 disabled";
    calculatey.style.display = "none";
    infoDiv.style.display = "none";
    } else if (textResult === "Imipenem / Cilastatin sodium" || textResult === "Daptomicina" || textResult === "Levofloxacin") {
    diya1.style.display = "none";
    diya2.style.display = "none";
    needy.style.display = "none";
    egfry.style.display = "none";
    cockgaulty.style.display = "flex";
    neighbour.text('Cockcroft-Gault Equation');
    disably.className = "dropdown-item2";
    disably2.className = "dropdown-item2";
    calculatey.style.display = "block";
    buttony.className = "btn btn-cyan btn-lg rounded-pill";
    infoDiv.style.display = "inline-block";
    } else {
    needy.style.display = "none";
    egfry.style.display = "none";
    cockgaulty.style.display = "flex";
    neighbour.text('Cockcroft-Gault Equation');
    disably.className = "dropdown-item2";
    disably2.className = "dropdown-item2";
    calculatey.style.display = "block";
    buttony.className = "btn btn-cyan btn-lg rounded-pill";
    diya1.style.display = "block";
    diya2.style.display = "block";
    infoDiv.style.display = "inline-block";
    }
    });
    $( "#searchDrop2 > a" ).click(function() {
    let string = $(this).text();
    $('#dropdownMenu1-2').text(string);
    let egfry = document.getElementById("egfry");
    let cockgaulty = document.getElementById("cockgaulty");
    let texty = $('#dropdownMenu1-2').text();
    if (texty === "e-GFR Method") {
    egfry.style.display = "flex";
    cockgaulty.style.display = "none";
    infoText.innerHTML = "When making calculation with <strong>e-GFR method, </strong>you should provide at least gender, age and serum creatinine values"
    } else if (texty === "Cockcroft-Gault Equation") {
    egfry.style.display = "none";
    cockgaulty.style.display = "flex";
    infoText.innerHTML = "When using <strong>Cockcroft-Gault equation</strong>, you should provide gender, age, weight and serum creatinine values"
    }
    });
  script.
    let result;
    let resulty = document.getElementById('resultText');
    let print = document.getElementById("print");
    $('#calcButton').click(() => {
    let method =  $('#dropdownMenu1-2').text();
    let gender1 = document.getElementById("gender1").value;
    let age1 = parseFloat(document.getElementById("age1").value);
    let weight = parseFloat(document.getElementById("weight").value);
    let srcr1 = parseFloat(document.getElementById("srcr1").value);
    let crunit1 = document.getElementById("crunit1").value;
    let actSubs = document.getElementById('dropdownMenu1-1').textContent;
    let doseText;
    let gender2 = document.getElementById("gender2").value;
    let age2 = parseFloat(document.getElementById("age2").value);
    let srcr2 = parseFloat(document.getElementById("srcr2").value);
    let crunit2 = document.getElementById("crunit2").value;
    let nitrog = parseFloat(document.getElementById("nitrog").value);
    let albumin = parseFloat(document.getElementById("albumin").value);
    let imicilapy = document.getElementById("imipenem-cilastatin");
    let daptomcy = document.getElementById("daptomicina");
    let levofloxy = document.getElementById("levofloxacin");
    let reload = document.getElementById("reload");
    let buttony = document.getElementById("calcButton");    
    if (crunit1 === "2") {
    srcr1 = srcr1 / 88.4;
    }
    if (crunit2 === "2") {
    srcr2 = srcr2 / 88.4;
    }
    if ($("#diyaliz1").is(':checked') || $("#diyaliz2").is(':checked')) {
    if (actSubs === "Ertapenem sodium") {
    doseText = "500 mg / day. If the dose was applied within 6 hours before the hemodialysis, 150 mg extra dose is suggested. If not, extra dose isn't needed"
    } else if (actSubs === "Fluconazole") {
    doseText = "The dose dedicated by the doctor according to indication may be applied following the hemodialysis treatment"
    } else if (actSubs === "Colistimethate sodium") {
    doseText = ("A total daily dose of 3,150,000 IU is given every 12 hours during the period which hemodialysis treatment isn't applied. On hemodialysis treatment days, a total daily dose of 4,500,000 IU is divided into two and first half is applied on the last hour of hemodialysis and the other half is after 12 hours");
    } else if (actSubs === "Meropenem trihydrate") {
    doseText = "The dose dedicated by the doctor is suggested to be applied following the hemodialysis treatment"
    } else if (actSubs === "Piperacillin sodium / Tazobactam sodium") {
    doseText = "Maximum dose is 4.5 g / 12h. Following the hemodialysis period, a supply dose of 2.25 g should be applied"
    } else if (actSubs === "Cefoperazone sodium / Sulbactam sodium") {
    doseText = "During hemodialysis, half-life of the drug may be slightly shortened. So, doses should be arranged as to follow the dialysis time."
    } else if (actSubs === "Ciprofloxacin lactate") {
    doseText = "On the dialysis days which follows a dialysis day, daily dose for ciprofloxacin must be maximum of 400 mg."
    } else if (actSubs === "Teicoplanin") {
    doseText = "Apply 1/3 of the dose OR apply the daily dose in every 3 days. Dose adjustment is not needed during the first 4 days of the treatment"
    } else if (actSubs === "Vancomycin hydrochloride") {
    doseText = "1 g / week";
    } else {
    doseText = "Dialysis dose data was not provided for this active substance";
    }
    window.location.href='#presentResults';
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    $("#calcButton").attr("disabled", true);
    } else if (method === "Cockcroft-Gault Equation") {
    if (age1 && weight && srcr1 && gender1 != "Gender") {
    result = (((140 - age1) * weight) / (72 * srcr1)).toFixed(2);
    if (gender1 === "2") {
    result = ((((140 - age1) * weight) / (72 * srcr1)) * 0.85).toFixed(2);
    }
    } else {
    doseText = `We can <a href="#activeSubstance">start</a> the calculation process once we provide the necessary information`;
    resulty.innerHTML = doseText;
    return window.location.href='#presentResults';
    }
    } else if (method === "e-GFR Method") {
    if (age2 && srcr2 && nitrog && albumin && gender2 != "Gender") {
    result = (170 * (srcr2 ** -0.999) * (age2 ** -0.176) * (nitrog ** -0.170) * (albumin ** 0.318)).toFixed(2);
    if (($("#black").is(':checked')) && gender2 === "2") {
    result = ((170 * (srcr2 ** -0.999) * (age2 ** -0.176) * (nitrog ** -0.170) * (albumin ** 0.318)) * 1.180 * 0.762).toFixed(2);
    } else if (gender2 === "2") {
    result = ((170 * (srcr2 ** -0.999) * (age2 ** -0.176) * (nitrog ** -0.170) * (albumin ** 0.318)) * 0.762).toFixed(2);
    } else if ($("#black").is(':checked')) {
    result = ((170 * (srcr2 ** -0.999) * (age2 ** -0.176) * (nitrog ** -0.170) * (albumin ** 0.318)) * 1.180).toFixed(2);
    }
    } else if (age2 && srcr2 && gender2 != "Gender") {
    result = (186 * (srcr2 ** -1.154) * (age2 ** -0.203)).toFixed(2);
    if (($("#black").is(':checked')) && gender2 === "2") {
    result = ((186 * (srcr2 ** -1.154) * (age2 ** -0.203)) * 1.210 * 0.742).toFixed(2);
    } else if (gender2 === "2") {
    result = ((186 * (srcr2 ** -1.154) * (age2 ** -0.203)) * 0.742).toFixed(2);
    } else if ($("#black").is(':checked')) {
    result = ((186 * (srcr2 ** -1.154) * (age2 ** -0.203)) * 1.210).toFixed(2);
    }
    } else {
    doseText = "When making calculation with <strong>e-GFR method, </strong>you should provide at least gender, age and serum creatinine values."
    resulty.innerHTML = doseText;
    return window.location.href='#presentResults';
    }
    }
    if (result) {
    console.log(`Hesaplama kısmını halletim sanırım, sonuç: ${result}`);
    } else {
    console.log('Diyalizden veya eksik bilgilerden dolayı sanırım, ortada bir ölçüm yok')
    }
    if (actSubs === "Ertapenem sodium") {
    if (result > 30) {
    doseText = "Dose adjustment is not needed. (Standard daily dose: 1g)";
    } else if (result <= 30) {
    doseText = "500 mg / day";
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Fluconazole") {
    if (result > 50) {
    doseText = "Dose adjustment is not needed. (50 mg - 400 mg a day, depending on the indication)";
    } else if (result <= 50) {
    doseText = "50% of the normal dose is applied. (Standard Dose: 50 mg - 400 mg a day, depending on the indication)"
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Meropenem trihydrate") {
    if (result > 50) {
    doseText = "Dose adjustment is not needed. (1.5 g - 6 g a day, depending on the indication)";
    } else if (result <= 50 && result > 25 ) {
    doseText = "1 g in every 12 hours";
    } else if (result <= 25 && result >= 10) {
    doseText = "500 g in every 12 hours";
    } else if (result < 10) {
    doseText = "500 mg in every 24 hours";
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Piperacillin sodium / Tazobactam sodium") {
    if (result > 80) {
    doseText = "Dose adjustment is not needed. (4.5 g in every 6 or 8 hours, depending on the indication)";
    } else if (result <= 80 && result >= 20) {
    doseText = "4.5 g in every 8 hours";
    } else if (result < 20) {
    doseText = "4.5 g in every 12 hours";
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Colistimethate sodium") {
    function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    if (result >= 70) {
    doseText = "Dose adjustment is not needed. Daily total dose is calculated as 150,000 IU/kg/day. Total dose is given in 2 or 3 equal parts.";
    } else if (result < 70 && result > 10) {
    minForColi = ((75000 * [(1.5 * result) + 30]) / 2).toFixed(0);
    minForColi = numberWithCommas(minForColi);
    maxForColi = ((105000 * [(1.5 * result) + 30]) / 2).toFixed(0);
    maxForColi = numberWithCommas(maxForColi);
    doseText = `In every 12 hours minimum ${minForColi} IU, maximum ${maxForColi} IU`;
    } else if (result <= 10) {
    doseText = `In every 12 hours minimum 1,687,500 IU, maximum 2,362,500 IU`;
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Vancomycin hydrochloride") {
    if (result >= 90) {
    doseText = 'Dose adjustment is not needed';  
    } else if (result < 90) {
    vancoDose = (result * 15.45).toFixed(0);
    doseText = `Following the 15 mg / kg loading dose, ${vancoDose} mg in every 24 hours.`;
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Cefoperazone sodium / Sulbactam sodium") {
    if (result >= 30) {
    doseText = "Normal dose which was dedicated by the physician. (Total dose for 2 active substances: 3 g - 12 g, depending on the indication)";
    } else if (result < 30 && result >= 15) {
    doseText = "3 g in every 12 hours (Total dose for 2 active substances)";
    } else if (result < 15) {
    doseText = "1.5 g for every 12 hours (Total dose for 2 active substances)";
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Ciprofloxacin lactate") {
    if (result > 60) {
    doseText = "Normal dose which was dedicated by the physician. (800 mg - 1200 mg, depending on the indication)";
    } else if (result <= 60 && result >= 30) {
    doseText = "Should be regulated as to be maximum of 800 mg in a day";
    } else if (result < 30) {
    doseText = "Should be regulated as to be maximum of 400 mg in a day";
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Teicoplanin") {
    if (result > 60) {
    doseText = "Normal dose which was dedicated by the physician. (200 mg - 800 mg / day, depending on the indication)";
    } else if (result <= 60 && result >= 40) {
    doseText = "Apply half of the dose OR apply the daily dose in every 2 days. Dose adjustment is not needed during the first 4 days of the treatment";
    } else if (result < 40) {
    doseText = "Apply 1/3 of the dose OR apply the daily dose in every 3 days. Dose adjustment is not needed during the first 4 days of the treatment";
    }
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    window.location.href='#presentResults';
    $("#calcButton").attr("disabled", true);
    } else if (actSubs === "Imipenem / Cilastatin sodium") {
    document.getElementById('srcrForCila').value = result;
    document.getElementById('weightForCila').value = weight;
    if (result === undefined) {
    window.location.href='#presentResults';
    } else {
    imicilapy.style.display = "flex";
    window.location.href='#imipenem-cilastatin';
    $("#calcButton").attr("disabled", true);
    }
    if (isNaN(weight)) {
    (document.getElementById('weightForCila').value) = "";
    console.log(result);
    } else {
    (document.getElementById('weightForCila').value) = weight;
    }
    } else if (actSubs === "Daptomicina") {
    document.getElementById('srcrForDapto').value = result;
    document.getElementById('weightForDapto').value = weight;
    if (result === undefined) {
    window.location.href='#presentResults';
    } else {
    daptomcy.style.display = "flex";
    window.location.href='#daptomicina';
    $("#calcButton").attr("disabled", true);
    }
    if (isNaN(weight)) {
    (document.getElementById('weightForDapto').value) = "";
    } else {
    (document.getElementById('weightForDapto').value) = weight;
    }
    } else if (actSubs === "Levofloxacin") {
    document.getElementById('srcrForLevo').value = result;
    if (result === undefined) {
    window.location.href='#presentResults';
    } else {
    levofloxy.style.display = "flex";
    window.location.href='#levofloxacin';
    $("#calcButton").attr("disabled", true);
    }
    } else {
    doseText = "Insufficiency dose data was not provided for this active substance";
    window.location.href='#presentResults';
    }
    if (result) {
    doseText += `<br> <h4 style="line-height: 40px"> (<b>Active substance:</b> ${actSubs} // <b>Creatinine clearance:</b> ${result} mL/min)</h4>`;
    }
    resulty.innerHTML = doseText;
    });
  script.
    $('#calcForCila').click(() => {
    let weight = document.getElementById('weightForCila').value;
    let normal = document.getElementById("normalForCila").value;
    let diyaList = document.getElementById("diyaForCila").value;
    let cilaInfo = document.getElementById('leftNote1');
    let cilaText;
    if (weight > 0 && weight < 30 && result < 71) {
    return cilaInfo.innerHTML = "Due to insufficient data for <strong>imipenem / cilastatin sodium</strong> , its usage for pediatric patients weight less than 30 kilograms is not suggested.";
    }
    if (result && weight) {
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    if (normal === "1") {
    if (weight >= 70) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 60 && weight < 70) {
    if (diyaList === "1") {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "125 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "125 mg in every 12 hours";
    }
    } else if (weight >= 50 && weight < 60) {
    if (diyaList === "1") {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "125 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "125 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "125 mg in every 12 hours";
    }
    } else if (weight >= 40 && weight < 50) {
    if (diyaList === "1") {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "125 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "125 mg in every 12 hours";
    }
    } else if (weight < 40) {
    if (diyaList === "1") {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "125 mg in every 12 hours";
    }
    }
    } else if (normal === "2") {
    if (weight >= 70) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 60 && weight < 70) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 50 && weight < 60) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 40 && weight < 50) {
    if (diyaList === "1") {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "125 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "125 mg in every 12 hours";
    }
    } else if (weight < 40) {
    if (diyaList === "1") {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "125 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "125 mg in every 12 hours";
    }
    }
    } else if (normal === "3") {
    if (weight >= 70) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "500 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 60 && weight < 70) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 50 && weight < 60) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 40 && weight < 50) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight < 40) {
    if (diyaList === "1") {
    cilaText = "125 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "125 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "125 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "125 mg in every 12 hours";
    }
    }
    } else if (normal === "4") {
    if (weight >= 70) {
    if (diyaList === "1") {
    cilaText = "500 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "1000 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "500 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "500 mg in every 12 hours";
    }
    } else if (weight >= 60 && weight < 70) {
    if (diyaList === "1") {
    cilaText = "500 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "750 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "500 mg in every 12 hours";
    }
    } else if (weight >= 50 && weight < 60) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "500 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight >= 40 && weight < 50) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight < 40) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    }
    } else if (normal === "5") {
    if (weight >= 70) {
    if (diyaList === "1") {
    cilaText = "500 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "1000 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "750 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "500 mg in every 6 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "500 mg in every 12 hours";
    }
    } else if (weight >= 60 && weight < 70) {
    if (diyaList === "1") {
    cilaText = "500 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "1000 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "750 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "500 mg in every 12 hours";
    }
    } else if (weight >= 50 && weight < 60) {
    if (diyaList === "1") {
    cilaText = "500 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "750 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "500 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "500 mg in every 12 hours";
    }
    } else if (weight >= 40 && weight < 50) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "500 mg in every 6 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    } else if (weight < 40) {
    if (diyaList === "1") {
    cilaText = "250 mg in every 12 hours";
    } else if (result >= 71) {
    cilaText = "500 mg in every 8 hours";
    } else if (result >= 41 && result < 71) {
    cilaText = "250 mg in every 6 hours";
    } else if (result >= 21 && result < 41) {
    cilaText = "250 mg in every 8 hours";
    } else if (result >= 6 && result < 21) {
    cilaText = "250 mg in every 12 hours";
    }
    }
    }
    } else {
    cilaText = `Making calculation with this active substance requires serum creatinine and weight values. <a href="#imipenem-cilastatin">Let's try again</a>`;
    resulty.innerHTML = cilaText;
    return window.location.href='#presentResults';
    }
    if (result) {
    cilaText += `<br> <h4 style="line-height: 40px"> (<b>Active substance:</b> Imipenem / Cilastatin sodium // <b>Creatinine clearance:</b> ${result} mL/min)</h4>`;
    }
    resulty.innerHTML = cilaText;
    window.location.href='#presentResults';
    $("#calcForCila").attr("disabled", true);
    });
  script.
    $('#calculateForDapto').click(() => {
    let normal = document.getElementById("indicForDapto").value;
    let weight = document.getElementById('weightForDapto').value;
    let diyaDapt = document.getElementById('diyaForDapto').value;
    let daptoText;
    let mgValue;
    if (result && weight) {
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    if (result >= 30) {
    if (normal === "1") {
    mgValue = (4 * weight);
    daptoText = `${mgValue} mg in every 24 hours`;
    } else if (normal === "2") {
    mgValue = (6 * weight);
    daptoText = `${mgValue} mg in every 24 hours`;
    }
    } else if (result < 30) {
    if (normal === "1") {
    mgValue = (4 * weight);
    daptoText = `${mgValue} mg in every 48 hours`;
    } else if (normal === "2") {
    mgValue = (6 * weight);
    daptoText = `${mgValue} mg in every 24 hours`;
    }
    }
    } else {
    daptoText = `Making calculation with this active substance requires serum creatinine and weight values. <a href="#daptomicina">Let's try again</a>`;
    resulty.innerHTML = daptoText;
    return window.location.href='#presentResults';
    }
    if (diyaDapt === "1" && result && weight) {
    daptoText += ` Results are also valid for hemodialysis patients.`;
    }
    if (result) {
    daptoText += `<br> <h4 style="line-height: 40px"> (<b>Active substance:</b> Daptomicina // <b>Creatinine clearance:</b> ${result} mL/min)</h4>`;
    }
    resulty.innerHTML = daptoText;
    window.location.href='#presentResults';
    $("#calculateForDapto").attr("disabled", true);
    });
  script.
    $('#calculateForLevo').click(() => {
    let normal = document.getElementById("normalForLevo").value;
    let diyaLevo = document.getElementById('diyaForLevo').value;
    let levoText;
    if (result) {
    reload.style.display = "inline-block";
    print.style.display = "inline-block";
    if (result > 50) {
    levoText = `Dose adjustment is not needed. (250 mg - 1000 mg a day, depending on the indication)`;
    } else if (result <= 50 && result > 19) {
    if (normal === "1") {
    levoText = "First dose is 250 mg. After then 125 mg / 24 hours";
    } else if (normal === "2") {
    levoText = "First dose is 500 mg. After then 250 mg / 24 hours";
    } else if (normal === "3") {
    levoText = "First dose is 500 mg. After then 250 mg / 12 hours";
    }
    } else if (result < 20 && result >= 10) {
    if (normal === "1") {
    levoText = "First dose is 250 mg. After then 125 mg / 48 hours";
    } else if (normal === "2") {
    levoText = "First dose is 500 mg. After then 125 mg / 24 hours";
    } else if (normal === "3") {
    levoText = "First dose is 500 mg. After then 125 mg / 12 hours";
    }
    } else if (result < 10) {
    if (normal === "1") {
    levoText = "First dose is 250 mg. After then 125 mg / 48 hours";
    } else if (normal === "2") {
    levoText = "First dose is 500 mg. After then 125 mg / 24 hours";
    } else if (normal === "3") {
    levoText = "First dose is 500 mg. After then 125 mg / 24 hours";
    }
    }
    } else {
    levoText = `Making calculation with this active substance requires serum creatinine value. <a href="#levofloxacin">Let's try again</a>`;
    resulty.innerHTML = levoText;
    return window.location.href='#presentResults';
    }
    if (diyaLevo === "1") {
    if (normal === "1") {
    levoText = "First dose is 250 mg. After then 125 mg / 48 hours";
    } else if (normal === "2") {
    levoText = "First dose is 500 mg. After then 125 mg / 24 hours";
    } else if (normal === "3") {
    levoText = "First dose is 500 mg. After then 125 mg / 24 hours";
    }
    }
    if (result) {
    levoText += `<br> <h4 style="line-height: 40px"> (<b>Active substance:</b> Levofloxacin // <b>Creatinine clearance:</b> ${result} mL/min)</h4>`;
    }
    resulty.innerHTML = levoText;
    window.location.href='#presentResults';
    $("#calculateForLevo").attr("disabled", true);
    });
  script.
    $('#reload').click(() => {
    location.assign('calculator#activeSubstance');
    setTimeout(() => {
    location.reload();
    }, 900);
    });
  script.
    const text1 = "When using <strong>Cockcroft-Gault equation</strong>, you should provide gender, age, weight and serum creatinine values.";
    const text2 = "When making calculation with <strong>e-GFR method, </strong>you should provide at least gender, age and serum creatinine values.";
    // basic expectations
    $('#weight').focus(() => {
    infoText.innerHTML = "<strong>Weight </strong>value must be provided as kilograms";
    $(infoDiv).fadeIn(1000); // fadeIn lere gerek var mı, işe yarıyor mu?
    });
    $("#weight").blur(() => {
    infoText.innerHTML = text1;
    $(infoDiv).fadeIn(1000);
    });
    $('#srcr1').focus(() => {
    return infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $(infoDiv).fadeIn(1000);
    });
    $("#srcr1").blur(() => {
    infoText.innerHTML = text1;
    $(infoDiv).fadeIn(1000);
    });
    $('#srcr2').focus(() => {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $(infoDiv).fadeIn(1000);
    });
    $("#srcr2").blur(() => {
    infoText.innerHTML = text2;
    $(infoDiv).fadeIn(1000);
    });
    $('#nitrog').focus(() => {
    infoText.innerHTML = "Enter <strong>blood urea nitrogen (BUN) </strong>value as mg/dL. Normal values range: 10-20 mg/dL.";
    $(infoDiv).fadeIn(1000);
    });
    $("#nitrog").blur(() => {
    infoText.innerHTML = text2;
    $(infoDiv).fadeIn(1000);
    });
    $('#albumin').focus(() => {
    infoText.innerHTML = "Enter <strong>albumin </strong>value as g/dL. Normal values range: 3.5 - 5.5 g/dL.";
    $(infoDiv).fadeIn(1000);
    });
    $("#albumin").blur(() => {
    infoText.innerHTML = text2;
    $(infoDiv).fadeIn(1000);
    });
    // diya stuff
    let diya1 = document.getElementById('dia1');
    $("#dia1").click(() => {
    let gender1 = document.getElementById("gender1");
    let age1 = document.getElementById("age1");
    let weight = document.getElementById("weight");
    let srcr1 = document.getElementById("srcr1");
    let crunit1 = document.getElementById("crunit1");
    if ($("#diyaliz1").is(':checked')) {
    infoText.innerHTML = text1;
    age1.disabled = false;
    gender1.disabled = false;
    weight.disabled = false;
    srcr1.disabled = false;
    crunit1.disabled = false;
    } else {
    infoText.innerHTML = "Data input is not needed in the case of hemodialysis.";
    age1.disabled = true;
    gender1.disabled = true;
    weight.disabled = true;
    srcr1.disabled = true;
    crunit1.disabled = true;
    }
    });
    $("#dia2").click(() => {
    let gender2 = document.getElementById("gender2");
    let age2 = document.getElementById("age2");
    let srcr2 = document.getElementById("srcr2");
    let crunit2 = document.getElementById("crunit2");
    let nitrog = document.getElementById("nitrog");
    let albumin = document.getElementById("albumin");
    if ($("#diyaliz2").is(':checked')) {
    infoText.innerHTML = text2;
    age2.disabled = false;
    gender2.disabled = false;
    srcr2.disabled = false;
    crunit2.disabled = false;
    nitrog.disabled = false;
    albumin.disabled = false;
    } else {
    infoText.innerHTML = "Data input is not needed in the case of hemodialysis.";
    age2.disabled = true;
    gender2.disabled = true;
    srcr2.disabled = true;
    crunit2.disabled = true;
    nitrog.disabled = true;
    albumin.disabled = true;
    }
    });
    // weight stuff
    let timer = null;
    $('#weight').keydown(() => {
    clearTimeout(timer);
    timer = setTimeout(weightReact, 1000)
    });
    let weight = document.getElementById('weight');
    function weightReact() {
    if (document.activeElement.id === "weight") {
    if (weight.value > 150) {
    infoText.innerHTML = "Weight value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (weight.value < 40 && weight.value > 0) {
    // düzenlenmeye ihtiyacı yok mu
    infoText.innerHTML = "Weight value of the patient is <strong>below </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (weight.value < 0) {
    infoText.innerHTML = "Weight value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>weight </strong>value as kilogram.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    }
    }
    }
    // age stuff
    let actSubs = document.getElementById('dropdownMenu1-1');
    $('#age1').keydown(() => {
    clearTimeout(timer);
    timer = setTimeout(age1React, 1000)
    });
    let age1 = document.getElementById("age1");
    function age1React() {
    if (document.activeElement.id === "age1") {
    if (actSubs.textContent === "Select The Active Substance") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Daptomicina") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value > -1 && age1.value < 18) {
    infoText.innerHTML = "Safety and effectiveness of <strong>daptomicina</strong> is not determined in the patients younger than 18 years old. Its usage is not suggested.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Ertapenem sodium") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value > -1 && age1.value < 13) {
    infoText.innerHTML = "There's not any data for <strong>ertapenem sodium</strong> about pediatric patients who has renal insufficiency.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Fluconazole") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Imipenem / Cilastatin sodium") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value > -1 && age1.value < 18) {
    infoText.innerHTML = "Clinical data is not sufficient to advice its usage for children or pediatric patients who has renal insufficiency (serum creatinine > 2 mg/dL)";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Colistimethate sodium") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Levofloxacin") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value > -1 && age1.value < 18) {
    infoText.innerHTML = "<strong>Levofloxacin</strong> is contraindicated for the children and adolescents whose growing still proceeds.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Meropenem trihydrate") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value > -1 && age1.value < 18) {
    infoText.innerHTML = "There's no experience related to <strong>meropeneme</strong> on children who has renal dysfunction.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Piperacillin sodium / Tazobactam sodium") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value > -1 && age1.value < 13) {
    infoText.innerHTML = "For <strong>piperacillin sodium / tazobactam sodium</strong>, there's a different calculation method for the children younger than 13 years old.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Cefoperazone sodium / Sulbactam sodium") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Ciprofloxacin lactate") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value > -1 && age1.value < 18) {
    infoText.innerHTML = "There is no dose study conducted for the children who has renal and/or liver failure using <strong>ciprofloxacin lactate</strong>.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Teicoplanin") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Vancomycin hydrochloride") {
    if (age1.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age1.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    }
    }
    $('#age2').keydown(() => {
    clearTimeout(timer);
    timer = setTimeout(age2React, 1000)
    });
    let age2 = document.getElementById("age2");
    function age2React() {
    if (document.activeElement.id === "age2") {
    if (actSubs.textContent === "Select The Active Substance") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Daptomicina") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value > -1 && age2.value < 18) {
    infoText.innerHTML = "Safety and effectiveness of <strong>daptomicina</strong> is not determined in the patients younger than 18 years old. Its usage is not suggested.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Ertapenem sodium") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value > -1 && age2.value < 13) {
    infoText.innerHTML = "There's not any data for <strong>ertapenem sodium</strong> about pediatric patients who has renal insufficiency.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Fluconazole") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Imipenem / Cilastatin sodium") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value > -1 && age2.value < 18) {
    infoText.innerHTML = "Clinical data is not sufficient to advice its usage for children or pediatric patients who has renal insufficiency (serum creatinine > 2 mg/dL)";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Colistimethate sodium") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Levofloxacin") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value > -1 && age2.value < 18) {
    infoText.innerHTML = "<strong>Levofloxacin</strong> is contraindicated for the children and adolescents whose growing still proceeds.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Meropenem trihydrate") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value > -1 && age2.value < 18) {
    infoText.innerHTML = "There's no experience related to <strong>meropeneme</strong> on children who has renal dysfunction.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Piperacillin sodium / Tazobactam sodium") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value > -1 && age2.value < 13) {
    infoText.innerHTML = "For <strong>piperacillin sodium / tazobactam sodium</strong>, there's a different calculation method for the children younger than 13 years old.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Cefoperazone sodium / Sulbactam sodium") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Ciprofloxacin lactate") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value > -1 && age2.value < 18) {
    infoText.innerHTML = "There is no dose study conducted for the children who has renal and/or liver failure using <strong>ciprofloxacin lactate</strong>.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Teicoplanin") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text1;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (actSubs.textContent === "Vancomycin hydrochloride") {
    if (age2.value > 100) {
    infoText.innerHTML = "Age value of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('fast', 100); $("#calcButton").attr("disabled", false);
    } else if (age2.value < 0) {
    infoText.innerHTML = "Age value cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = text2;
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    }
    }
    // srcr stuff
    $('#srcr1').keydown(() => {
    clearTimeout(timer);
    timer = setTimeout(srcr1React, 1000)
    });
    let srcr1 = document.getElementById("srcr1");
    function srcr1React() {
    if (document.activeElement.id === "srcr1") {
    if (crunit1.value === "1") {
    if (srcr1.value > 10) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr1.value < 0) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (crunit1.value === "2") {
    if (srcr1.value > 884) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr1.value < 88) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>below </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr1.value < 0) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    }
    }
    $('#srcr2').keydown(() => {
    clearTimeout(timer);
    timer = setTimeout(srcr2React, 1000)
    });
    let srcr2 = document.getElementById("srcr2");
    function srcr2React() {
    if (document.activeElement.id === "srcr2") {
    if (crunit2.value === "1") {
    if (srcr2.value > 10) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr2.value < 0) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (crunit2.value === "2") {
    if (srcr2.value > 884) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr2.value < 88 && srcr2.value > 0) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>below </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr2.value < 0) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    }
    }
    $('#crunit1').click(() => {
    if (crunit1.value === "1") {
    if (srcr1.value > 10) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr1.value < 0) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (crunit1.value === "2") {
    if (srcr1.value > 884) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr1.value < 88) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>below </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr1.value < 0) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    });
    $('#crunit2').click(() => {
    if (crunit2.value === "1") {
    if (srcr2.value > 10) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr2.value < 0) {
    infoText.innerHTML = "Serum creatinine value (mg/dL) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    } else if (crunit2.value === "2") {
    if (srcr2.value > 884) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr2.value < 88 && srcr2.value > 0) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient is <strong>below </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (srcr2.value < 0) {
    infoText.innerHTML = "Serum creatinine value (µmol/L) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>serum creatinine </strong>value as mg/dL or µmol/L. Normal values range: < 1.5 mg/dL (<133 µmol/L)";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    });
    // BUN stuff
    $('#nitrog').keydown(() => {
    clearTimeout(timer);
    timer = setTimeout(bunReact, 1000)
    });
    let nitrog = document.getElementById("nitrog");
    function bunReact() {
    if (document.activeElement.id === "nitrog") {
    if (nitrog.value > 50) {
    infoText.innerHTML = "Blood urea nitrogen value (mg/dL) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (nitrog.value < 0) {
    infoText.innerHTML = "Blood urea nitrogen value (mg/dL) cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>blood urea nitrogen (BUN) </strong>value as mg/dL. Normal values range: 10-20 mg/dL.";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    }
    // albumin stuff
    $('#albumin').keydown(() => {
    clearTimeout(timer);
    timer = setTimeout(albuminReact, 1000)
    });
    let albumin = document.getElementById("albumin");
    function albuminReact() {
    if (document.activeElement.id === "albumin") {
    if (albumin.value > 7) {
    infoText.innerHTML = "Albumin value (g/dL) of the patient is <strong>above </strong>the expected range, please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else if (albumin.value < 0) {
    infoText.innerHTML = "Albumin value (g/dL) of the patient cannot be less than zero. Please check again.";
    $('#calculate').fadeTo('medium', 0); $("#calcButton").attr("disabled", true);
    } else {
    infoText.innerHTML = "Enter <strong>albumin </strong>value as g/dL. Normal values range: 3.5 - 5.5 g/dL.";
    $('#calculate').fadeTo('medium', 100); $("#calcButton").attr("disabled", false);
    }
    }
    }
  script.
    function createCookie(name,value,days) {
    if (days) {
    var date = new Date();
    date.setTime(date.getTime()+(days*24*60*60*1000));
    var expires = "; expires="+date.toGMTString();
    }
    else var expires = "";
    document.cookie = name+"="+value+expires+"; path=/";
    }
    function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
    var c = ca[i];
    while (c.charAt(0)==' ') c = c.substring(1,c.length);
    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
    }
    function eraseCookie(name) {
    createCookie(name,"",-1);
    }
    $('#print').click(() => {
    let suggesty;
    let whole = resulty.textContent;
    let position = whole.indexOf('(');
    if (position === -1) {
    suggesty = whole;
    } else {
    suggesty = whole.substring(0, (position));
    }
    let diaDapto = document.getElementById('diyaForDapto');
    let diaCila = document.getElementById('diyaForCila');
    let diaLevo = document.getElementById('diyaForLevo');
    createCookie('crCl', result, 1);
    if ($("#diyaliz1").is(':checked') || $("#diyaliz2").is(':checked') || diaDapto.value === "1"|| diaCila.value === "1"|| diaLevo.value === "1") {
    createCookie('dia', 'Receiving hemodialysis', 1);
    } else {
    createCookie('dia', 'Not receiving hemodialysis', 1);
    }
    let preTime = new Date();
    time = preTime.toLocaleString();
    createCookie('time', time, 1);
    createCookie('actSubs', actSubs.textContent, 1);
    createCookie('suggestion', suggesty, 1);
    });